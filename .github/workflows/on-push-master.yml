name: MASTER Auto deploy

on:
  push:
    branches:
      - master

jobs:
  lint:
    name: Check coding standard
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node_version: ['16.x']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node_version }}
          cache: npm
      - name: Install dependencies
        run: npm ci
      - run: npm run prettier
  build:
    name: Build and deploy to remote host
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_MASTER }}
          username: ${{ secrets.SSH_USERNAME_MASTER }}
          key: ${{ secrets.SSH_KEY_MASTER }}
          script_stop: true
          script: |
            cd "${{ secrets.SSH_APP_PATH_MASTER }}"
            bash git-checkout-branch.sh "${{ github.ref_name }}"
            git pull origin ${{ github.ref_name }}

            export APP_PORT=${{ secrets.APP_PORT_MASTER }}
            export INSTANCE_TYPE=${{ secrets.INSTANCE_TYPE_MASTER }}

            rm -f .env.production
            echo REACT_APP_X_ORBITER_LIQUIDATOR_API_KEY=${{ secrets.REACT_APP_X_ORBITER_LIQUIDATOR_API_KEY_MASTER }} > .env.production
            echo REACT_APP_X_ORBITER_LIQUIDATOR_API_URL=${{ secrets.REACT_APP_X_ORBITER_LIQUIDATOR_API_URL_MASTER }} >> .env.production
            echo REACT_APP_X_ORBITER_CHAIN_ID=${{ secrets.REACT_APP_X_ORBITER_CHAIN_ID_MASTER }} >> .env.production

            export DOCKER_SCAN_SUGGEST=false
            docker compose -f docker-stack.yml build --no-cache --compress
            docker compose -f docker-stack.yml up -d
